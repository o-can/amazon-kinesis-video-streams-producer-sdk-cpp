#!/bin/bash
set -e
# --------- create require directories ---------
KINESIS_VIDEO_ROOT=`pwd`

if [[ "$KINESIS_VIDEO_ROOT" == *\ * ]]; then
    echo "Current working path cannot have space in it !"
    exit
fi

CMAKE_VERSION_STRING=`cmake --version`
echo $CMAKE_VERSION_STRING
CMAKE_EXPECTED_MAJOR_VERSION=3
VERSION_ARRAY=( $CMAKE_VERSION_STRING )
CMAKE_VERSION=${VERSION_ARRAY[2]}
CMAKE_MAJOR_VERSION=${CMAKE_VERSION:0:1}

if [ "$CMAKE_MAJOR_VERSION" \< "$CMAKE_EXPECTED_MAJOR_VERSION" ]; then
  echo "CMake 3.x or higher is required.  You are running $CMAKE_VERSION"
  exit
fi

DOWNLOADS="$KINESIS_VIDEO_ROOT/downloads"
if [ ! -d "$DOWNLOADS" ]; then
    mkdir "$DOWNLOADS"
fi

export PATH="$KINESIS_VIDEO_ROOT/downloads/local/bin:$PATH"
export PKG_CONFIG_LIBDIR="$DOWNLOADS/local/lib/pkgconfig"
export CMAKE_PREFIX_PATH="$DOWNLOADS/local"

PLATFORM='unknown'
unamestr=`uname`
if [[ "$unamestr" == 'Linux' ]]; then
   PLATFORM='linux'
elif [[ "$unamestr" == 'FreeBSD' ]]; then
   PLATFORM='freebsd'
elif [[ "$unamestr" == 'Darwin' ]]; then
   PLATFORM='mac'
fi

# --------- download libs ---------

# --------- build + install libs ---------
echo "Checking openssl at $DOWNLOADS/local/lib/libssl.a"
if [ ! -f $DOWNLOADS/local/lib/libssl.a ]; then
  echo "openssl lib not found. Installing"
  if [ ! -f $DOWNLOADS/openssl-1.1.0f.tar.gz ]; then
    cd $DOWNLOADS
    curl -L "https://www.openssl.org/source/openssl-1.1.0f.tar.gz" -o "openssl-1.1.0f.tar.gz"
  fi
  cd $DOWNLOADS
  tar -xvf openssl-1.1.0f.tar.gz
  cd $DOWNLOADS/openssl-1.1.0f
  ./config -fPIC --prefix=$DOWNLOADS/local/ --openssldir=$DOWNLOADS/local/
  make
  make install
fi

echo "Checking curl at $DOWNLOADS/local/lib/libcurl.a"
if [ ! -f $DOWNLOADS/local/lib/libcurl.a ]; then
  echo "Curl lib not found. Installing"
  if [ ! -f $DOWNLOADS/curl-7.57.0.tar.xz ]; then
    cd $DOWNLOADS
    curl -L "https://curl.haxx.se/download/curl-7.57.0.tar.xz" -o "curl-7.57.0.tar.xz"
  fi
  cd $DOWNLOADS
  tar -xvf curl-7.57.0.tar.xz
  cd $DOWNLOADS/curl-7.57.0
  ./configure --prefix=$DOWNLOADS/local/ --enable-dynamic --disable-rtsp --disable-ldap --without-zlib --with-ssl=$DOWNLOADS/local/
  make
  make install
fi

echo "Checking log4cplus at $DOWNLOADS/local/lib/liblog4cplus.dylib/.so"
if [ ! -f $DOWNLOADS/local/lib/liblog4cplus.dylib ]; then
  if [ ! -f $DOWNLOADS/local/lib/liblog4cplus.so ]; then
    echo "log4cplus lib not found. Installing"
    if [ ! -f $DOWNLOADS/log4cplus-1.2.0.tar.xz ]; then
      cd $DOWNLOADS
      curl -L "https://versaweb.dl.sourceforge.net/project/log4cplus/log4cplus-stable/1.2.0/log4cplus-1.2.0.tar.xz" -o "log4cplus-1.2.0.tar.xz"
    fi
    cd $DOWNLOADS
    tar -xvf log4cplus-1.2.0.tar.xz
    cd $DOWNLOADS/log4cplus-1.2.0
    ./configure --prefix=$DOWNLOADS/local/ --with-pic
    make
    make install
  fi
fi

echo "Checking gettext at $DOWNLOADS/local/lib/libgettextlib.dylib/.so"
if [ ! -f $DOWNLOADS/local/lib/libgettextlib.dylib ]; then
  if [ ! -f $DOWNLOADS/local/lib/libgettextlib.so ]; then
    echo "gettext lib not found. Installing"
    if [ ! -f $DOWNLOADS/gettext-0.19.8.tar.xz ]; then
      cd $DOWNLOADS
      curl -L "http://ftp.gnu.org/pub/gnu/gettext/gettext-0.19.8.tar.xz" -o "gettext-0.19.8.tar.xz"
    fi
    cd $DOWNLOADS
    tar -xvf gettext-0.19.8.tar.xz
    cd $DOWNLOADS/gettext-0.19.8
    ./configure --prefix=$DOWNLOADS/local/
    make
    make install
  fi
fi

echo "Checking libffi at $DOWNLOADS/local/lib/libffi.a"
if [ ! -f $DOWNLOADS/local/lib/libffi.dylib ]; then
  if [ ! -f $DOWNLOADS/local/lib/libffi.a ]; then
    echo "libffi lib not found. Installing"
    if [ ! -f $DOWNLOADS/libffi-3.2.1.tar.gz ]; then
      cd $DOWNLOADS
      curl -L "ftp://sourceware.org/pub/libffi/libffi-3.2.1.tar.gz" -o "libffi-3.2.1.tar.gz"
    fi
    cd $DOWNLOADS
    tar -xvf libffi-3.2.1.tar.gz
    cd $DOWNLOADS/libffi-3.2.1
    ./configure --prefix=$DOWNLOADS/local/
    make
    make install
  fi
fi

echo "Checking pcre at $DOWNLOADS/local/lib/libpcre.dylib/.so"
if [ ! -f $DOWNLOADS/local/lib/libpcre.dylib ]; then
  if [ ! -f $DOWNLOADS/local/lib/libpcre.so ]; then
    echo "pcre lib not found. Installing"
    if [ ! -f $DOWNLOADS/pcre-8.41.tar.gz ]; then
      cd $DOWNLOADS
      curl -L "https://ftp.pcre.org/pub/pcre/pcre-8.41.tar.gz" -o "pcre-8.41.tar.gz"
    fi
    cd $DOWNLOADS
    tar -xvf pcre-8.41.tar.gz
    cd $DOWNLOADS/pcre-8.41
    ./configure --prefix=$DOWNLOADS/local/
    make
    make install
  fi
fi

echo "Checking zlib at $DOWNLOADS/local/lib/libz.dylib/.so"
if [ ! -f $DOWNLOADS/local/lib/libz.dylib ]; then
  if [ ! -f $DOWNLOADS/local/lib/libz.so ]; then
    echo "zlib lib not found. Installing"
    if [ ! -f $DOWNLOADS/zlib-1.2.11.tar.gz ]; then
      cd $DOWNLOADS
      curl -L "http://www.zlib.net/zlib-1.2.11.tar.gz" -o "zlib-1.2.11.tar.gz"
    fi
    cd $DOWNLOADS
    tar -xvf zlib-1.2.11.tar.gz
    cd $DOWNLOADS/zlib-1.2.11
    ./configure --prefix=$DOWNLOADS/local/
    make
    make install
  fi
fi

echo "Checking iconv at $DOWNLOADS/local/lib/libiconv.dylib/.so"
if [ ! -f $DOWNLOADS/local/lib/libiconv.dylib ]; then
  if [ ! -f $DOWNLOADS/local/lib/libiconv.so ]; then
    echo "iconv lib not found. Installing"
    if [ ! -f $DOWNLOADS/libiconv-1.15.tar.gz ]; then
      cd $DOWNLOADS
      curl -L "https://ftp.gnu.org/gnu/libiconv/libiconv-1.15.tar.gz" -o "libiconv-1.15.tar.gz"
    fi
    cd $DOWNLOADS
    tar -xvf libiconv-1.15.tar.gz
    cd $DOWNLOADS/libiconv-1.15
    ./configure --prefix=$DOWNLOADS/local/
    make
    make install
  fi
fi

if [[ $PLATFORM == 'linux' ]]; then
  echo "Checking util-linux at $DOWNLOADS/local/lib/libmount.dylib/.so"
  if [ ! -f $DOWNLOADS/local/lib/libmount.dylib ]; then
    if [ ! -f $DOWNLOADS/local/lib/libmount.so ]; then
      echo "libmount lib not found. Installing"
      if [ ! -f $DOWNLOADS/util-linux-2.31.tar.gz ]; then
        cd $DOWNLOADS
        curl -L "https://www.kernel.org/pub/linux/utils/util-linux/v2.31/util-linux-2.31.tar.gz" -o "util-linux-2.31.tar.gz"
      fi
      cd $DOWNLOADS
      tar -xvf util-linux-2.31.tar.gz
      cd $DOWNLOADS/util-linux-2.31
      ./configure --prefix=$DOWNLOADS/local/ --disable-all-programs --enable-libmount --enable-libblkid
      make
      make install
    fi
  fi
fi

echo "Checking glib at $DOWNLOADS/local/lib/libglib-2.0.dylib/.so"
if [ ! -f $DOWNLOADS/local/lib/libglib-2.0.dylib ]; then
  if [ ! -f $DOWNLOADS/local/lib/libglib-2.0.so ]; then
    export LIBFFI_CFLAGS="-I$DOWNLOADS/local/include -I$DOWNLOADS/local/lib/libffi-3.2.1/include -L$DOWNLOADS/local/lib"
    export LIBFFI_LIBS="-L$DOWNLOADS/local/lib -lffi"
    export LDFLAGS="-L$DOWNLOADS/local/lib"
    export CPPFLAGS="-I$DOWNLOADS/local/include"

    echo "glib lib not found. Installing"
    if [ ! -f $DOWNLOADS/glib-2.54.2.tar.xz ]; then
      cd $DOWNLOADS
      curl -L "http://ftp.gnome.org/pub/gnome/sources/glib/2.54/glib-2.54.2.tar.xz" -o "glib-2.54.2.tar.xz"
    fi
    cd $DOWNLOADS
    tar -xvf glib-2.54.2.tar.xz
    cd $DOWNLOADS/glib-2.54.2
    autoreconf -f -i
    ./configure --prefix=$DOWNLOADS/local/ --with-pcre --with-libiconv
    make
    make install
  fi
fi

export GLIB_CFLAGS="-I$DOWNLOADS/local/include/glib-2.0 -I$DOWNLOADS/local/include/glib-2.0/glib -I$DOWNLOADS/local/lib/glib-2.0/include"

echo "Checking gstreamer at $DOWNLOADS/local/lib/libgstreamer-1.0.dylib/.so"
if [ ! -f $DOWNLOADS/local/lib/libgstreamer-1.0.dylib ]; then
  if [ ! -f $DOWNLOADS/local/lib/libgstreamer-1.0.so ]; then
    echo "gstreamer lib not found. Installing"
    export ARCHFLAGS="-arch x86_64"
    if [ ! -f $DOWNLOADS/gstreamer-1.12.3.tar.xz ]; then
      cd $DOWNLOADS
      curl -L "https://gstreamer.freedesktop.org/src/gstreamer/gstreamer-1.12.3.tar.xz" -o "gstreamer-1.12.3.tar.xz"
    fi
    cd $DOWNLOADS
    tar -xvf gstreamer-1.12.3.tar.xz
    cd $DOWNLOADS/gstreamer-1.12.3

    for d in ./*/ ; do
      if [ -f "$d/configure.ac" ]; then
        (cd "$d" && autoreconf -f -i);
      fi
    done

    ./configure --prefix=$DOWNLOADS/local --disable-gtk-doc -- CFLAGS="-I$DOWNLOADS/local/include" LDFLAGS="-L$DOWNLOADS/local/lib"
    make
    make install
  fi
fi

echo "Checking gst-plugin-base at $DOWNLOADS/local/lib/libgstvideo-1.0.dylib/.so"
if [ ! -f $DOWNLOADS/local/lib/libgstvideo-1.0.dylib ]; then
  if [ ! -f $DOWNLOADS/local/lib/libgstvideo-1.0.so ]; then
    echo "gst-plugin-base not found. Installing"
    if [ ! -f $DOWNLOADS/gst-plugins-base-1.12.3.tar.xz ]; then
      cd $DOWNLOADS
      curl -L "https://gstreamer.freedesktop.org/src/gst-plugins-base/gst-plugins-base-1.12.3.tar.xz" -o "gst-plugins-base-1.12.3.tar.xz"
    fi
    cd $DOWNLOADS
    tar -xvf gst-plugins-base-1.12.3.tar.xz
    cd $DOWNLOADS/gst-plugins-base-1.12.3

    for d in ./*/ ; do
      if [ -f "$d/configure.ac" ]; then
        (cd "$d" && autoreconf -f -i);
      fi
    done

    ./configure --prefix=$DOWNLOADS/local --disable-gtk-doc -- CFLAGS="-I$DOWNLOADS/local/include" LDFLAGS="-L$DOWNLOADS/local/lib"
    make
    make install
  fi
fi

echo "Checking gst-plugin-good at $DOWNLOADS/local/lib/gstreamer-1.0/libgstavi.la"
if [ ! -f $DOWNLOADS/local/lib/gstreamer-1.0/libgstavi.la ]; then
  echo "gst-plugin-good not found. Installing"
  if [ ! -f $DOWNLOADS/gst-plugins-good-1.12.3.tar.xz ]; then
    cd $DOWNLOADS
    curl -L "https://gstreamer.freedesktop.org/src/gst-plugins-good/gst-plugins-good-1.12.3.tar.xz" -o "gst-plugins-good-1.12.3.tar.xz"
  fi
  cd $DOWNLOADS
  tar -xvf gst-plugins-good-1.12.3.tar.xz
  cd $DOWNLOADS/gst-plugins-good-1.12.3

  for d in ./*/ ; do
    if [ -f "$d/configure.ac" ]; then
      (cd "$d" && autoreconf -f -i);
    fi
  done

  ./configure --prefix=$DOWNLOADS/local --disable-examples --disable-x --disable-gtk-doc -- CFLAGS="-I$DOWNLOADS/local/include" LDFLAGS="-L$DOWNLOADS/local/lib"
  make
  make install
fi

echo "Checking gst-plugin-bad at $DOWNLOADS/local/lib/libgstbadvideo-1.0.dylib/.so"
if [ ! -f $DOWNLOADS/local/lib/libgstbadvideo-1.0.dylib ]; then
  if [ ! -f $DOWNLOADS/local/lib/libgstbadvideo-1.0.so ]; then
    echo "gst-plugin-bad not found. Installing"
    if [ ! -f $DOWNLOADS/gst-plugins-bad-1.12.3.tar.xz ]; then
      cd $DOWNLOADS
      curl -L "https://gstreamer.freedesktop.org/src/gst-plugins-bad/gst-plugins-bad-1.12.3.tar.xz" -o "gst-plugins-bad-1.12.3.tar.xz"
    fi
    cd $DOWNLOADS
    tar -xvf gst-plugins-bad-1.12.3.tar.xz
    cd $DOWNLOADS/gst-plugins-bad-1.12.3

    for d in ./*/ ; do
      if [ -f "$d/configure.ac" ]; then
        (cd "$d" && autoreconf -f -i);
      fi
    done

    ./configure --prefix=$DOWNLOADS/local --disable-gtk-doc --disable-wayland  --disable-opencv --disable-ldap --disable-rtsp --without-zlib --without-ssl --disable-yadif --disable-sdl --disable-debug --disable-dependency-tracking LIBTOOL="$DOWNLOADS/gst-plugins-bad-1.12.3/libtool --tag=CC" CFLAGS="-I$DOWNLOADS/local/include" LDFLAGS="-L$DOWNLOADS/local/lib"
    make
    make install
  fi
fi

echo "Checking gst-rpicamsrc at $DOWNLOADS/local/lib/gstreamer-1.0/gst-rpicamsrc.dylib/.so"
if [ ! -f $DOWNLOADS/local/lib/gstreamer-1.0/gst-rpicamsrc.dylib ]; then
  if [ ! -f $DOWNLOADS/local/lib/gstreamer-1.0/gst-rpicamsrc.so ]; then
    echo "rpicamsrc not found. Installing"
    if [ ! -d $DOWNLOADS/gst-rpicamsrc ]; then
      cd $DOWNLOADS
      git clone "https://github.com/thaytan/gst-rpicamsrc"
    fi
    cd $DOWNLOADS/gst-rpicamsrc

    for d in ./*/ ; do
      if [ -f "$d/configure.ac" ]; then
        (cd "$d" && autoreconf -f -i);
      fi
    done

    ./configure --prefix=$DOWNLOADS/local --disable-gtk-doc -- CFLAGS="-I$DOWNLOADS/local/include" LDFLAGS="-L$DOWNLOADS/local/lib"
    make
    make install
  fi
fi

echo "Checking gst-rpicamsrc at $DOWNLOADS/local/lib/gstreamer-1.0/gst-rpicamsrc.dylib/.so"
if [ ! -f $DOWNLOADS/local/lib/gstreamer-1.0/gst-rpicamsrc.dylib ]; then
  if [ ! -f $DOWNLOADS/local/lib/gstreamer-1.0/gst-rpicamsrc.so ]; then
    echo "rpicamsrc not found. Installing"
    if [ ! -d $DOWNLOADS/gst-rpicamsrc ]; then
      cd $DOWNLOADS
      git clone "https://github.com/thaytan/gst-rpicamsrc"
    fi
    cd $DOWNLOADS/gst-rpicamsrc

    for d in ./*/ ; do
      if [ -f "$d/configure.ac" ]; then
        (cd "$d" && autoreconf -f -i);
      fi
    done

    ./configure --prefix=$DOWNLOADS/local --disable-gtk-doc -- CFLAGS="-I$DOWNLOADS/local/include" LDFLAGS="-L$DOWNLOADS/local/lib"
    make
    make install
  fi
fi

echo "Checking gst-rpicamsrc at $DOWNLOADS/local/lib/gstreamer-1.0/gst-rpicamsrc.dylib/.so"
if [ ! -f $DOWNLOADS/local/lib/gstreamer-1.0/gst-rpicamsrc.dylib ]; then
  if [ ! -f $DOWNLOADS/local/lib/gstreamer-1.0/gst-rpicamsrc.so ]; then
    echo "rpicamsrc not found. Installing"
    if [ ! -d $DOWNLOADS/gst-rpicamsrc ]; then
      cd $DOWNLOADS
      git clone "https://github.com/thaytan/gst-rpicamsrc"
    fi
    cd $DOWNLOADS/gst-rpicamsrc

    for d in ./*/ ; do
      if [ -f "$d/configure.ac" ]; then
        (cd "$d" && autoreconf -f -i);
      fi
    done

    ./configure --prefix=$DOWNLOADS/local --disable-gtk-doc -- CFLAGS="-I$DOWNLOADS/local/include" LDFLAGS="-L$DOWNLOADS/local/lib"
    make
    make install
  fi
fi

echo "Checking x264 at $DOWNLOADS/local/lib/libx264.dylib/.so"
if [ ! -f $DOWNLOADS/local/lib/libx264.dylib ]; then
  if [ ! -f $DOWNLOADS/local/lib/libx264.so ]; then
    echo "gst-plugin-ugly not found. Installing"
    if [ ! -f $DOWNLOADS/x264-snapshot-20171204-2245-stable.tar.bz2 ]; then
      cd $DOWNLOADS
      curl -L "https://download.videolan.org/x264/snapshots/x264-snapshot-20171204-2245-stable.tar.bz2" -o "x264-snapshot-20171204-2245-stable.tar.bz2"
    fi
    cd $DOWNLOADS
    tar -xvf x264-snapshot-20171204-2245-stable.tar.bz2
    cd $DOWNLOADS/x264-snapshot-20171204-2245-stable

    for d in ./*/ ; do
      if [ -f "$d/configure.ac" ]; then
        (cd "$d" && autoreconf -f -i);
      fi
    done

    ./configure --prefix=$DOWNLOADS/local --enable-shared --disable-cli --disable-asm
    make
    make install
  fi
fi

echo "Checking gst-plugin-ugly at $DOWNLOADS/local/lib/gstreamer-1.0/libgstx264.dylib/.so"
if [ ! -f $DOWNLOADS/local/lib/gstreamer-1.0/libgstx264.dylib ]; then
  if [ ! -f $DOWNLOADS/local/lib/gstreamer-1.0/libgstx264.so ]; then
    echo "gst-plugin-ugly not found. Installing"
    if [ ! -f $DOWNLOADS/gst-plugins-ugly-1.12.3.tar.xz ]; then
      cd $DOWNLOADS
      curl -L "https://gstreamer.freedesktop.org/src/gst-plugins-ugly/gst-plugins-ugly-1.12.3.tar.xz" -o "gst-plugins-ugly-1.12.3.tar.xz"
    fi
    cd $DOWNLOADS
    tar -xvf gst-plugins-ugly-1.12.3.tar.xz
    cd $DOWNLOADS/gst-plugins-ugly-1.12.3

    for d in ./*/ ; do
      if [ -f "$d/configure.ac" ]; then
        (cd "$d" && autoreconf -f -i);
      fi
    done

    ./configure --prefix=$DOWNLOADS/local --disable-gtk-doc CFLAGS="-I$DOWNLOADS/local/include" LDFLAGS="-L$DOWNLOADS/local/lib"
    make
    make install
  fi
fi

echo "Checking googletest at $DOWNLOADS/local/lib/libgtest.a"
if [ ! -f $DOWNLOADS/local/lib/libgtest.dylib ]; then
  if [ ! -f $DOWNLOADS/local/lib/libgtest.so ]; then
    echo "gtest lib not found. Installing"
    if [ ! -f $DOWNLOADS/google-test-1.8.0.gz ]; then
      cd $DOWNLOADS
      curl -L "https://github.com/google/googletest/archive/release-1.8.0.tar.gz" -o "google-test-1.8.0.gz"
    fi
    cd $DOWNLOADS
    tar -xvf google-test-1.8.0.gz
    cd googletest-release-1.8.0/googletest
    cmake -DBUILD_SHARED_LIBS=ON .
    make
    mkdir -p $DOWNLOADS/local/lib
    cp -r ./include $DOWNLOADS/local
    cp ./lib* $DOWNLOADS/local/lib
  fi
fi

export PKG_CONFIG_LIBDIR="$DOWNLOADS/local/lib/pkgconfig"
export CMAKE_PREFIX_PATH="$DOWNLOADS/local"

## --------- build kinesis video ---------
cd $KINESIS_VIDEO_ROOT
cmake CMakeLists.txt
make

echo "**********************************************************"
echo Success!!!
echo "**********************************************************"
